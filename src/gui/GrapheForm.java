/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import connexion.Connexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

import javax.swing.*;
import java.awt.*;
/**
 *
 * @author hp
 */
public class GrapheForm extends javax.swing.JInternalFrame {
  
    

    private static GrapheForm instance;

    private GrapheForm() {
        super("Nombre d'équipements par salle", true, true, true, true);
        setSize(600, 600); // Increased size
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        setBounds(300, 150, 1000, 700); // Adjusted bounds
        setResizable(true); // Allow resizing

        initComponents();
        setTitle("Nombre d'équipements par salle");

        // Création du dataset
        DefaultCategoryDataset dataset = createDataset();

        // Création du graphique
        JFreeChart barChart = ChartFactory.createBarChart(
                "Nombre d’équipements par salle", // Titre du graphique
                "Salles",                         // Axe X
                "Nombre d'équipements",           // Axe Y
                dataset,                          // Données
                PlotOrientation.VERTICAL,
                true, true, false);

        // Personnalisation du graphique
        CategoryPlot plot = barChart.getCategoryPlot();
        plot.setBackgroundPaint(Color.WHITE);
        plot.setDomainGridlinePaint(Color.GRAY);
        plot.setRangeGridlinePaint(Color.GRAY);

        // Ajouter le graphique à un panel
        ChartPanel chartPanel = new ChartPanel(barChart);
        chartPanel.setPreferredSize(new Dimension(780, 450));
        setContentPane(chartPanel);
    }

    public static synchronized GrapheForm getInstance() {
    if (instance == null) {
        try {
            instance = new GrapheForm();
        } catch (Exception e) {
            e.printStackTrace();  // Ajoute une trace d'erreur pour mieux comprendre ce qui ne va pas
        }
    }
    return instance;
}

    private DefaultCategoryDataset createDataset() {
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();

    // Connexion à la base de données
    Connection connection = null;
    PreparedStatement statement = null;
    ResultSet resultSet = null;

    try {
        // Utiliser ta classe Connexion pour obtenir la connexion
        connection = Connexion.getInstance().getCn();

        // Requête pour récupérer le nombre d'équipements par salle
        String sql = "SELECT s.nom, COUNT(ae.salle) AS nombre_equipements " +
                     "FROM Salle s " +
                     "JOIN affectation_equipement ae ON s.id = ae.salle " +
                     "GROUP BY s.id";

        // Préparer la requête
        statement = connection.prepareStatement(sql);
        resultSet = statement.executeQuery();

        // Traiter les résultats et les ajouter au dataset
        while (resultSet.next()) {
            String salle = resultSet.getString("nom");
            int nombreEquipements = resultSet.getInt("nombre_equipements");
            dataset.addValue(nombreEquipements, "Équipements", salle);
        }

    } catch (SQLException e) {
        e.printStackTrace();
    } finally {
        // Fermer les ressources
        try {
            if (resultSet != null) resultSet.close();
            if (statement != null) statement.close();
            if (connection != null) connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    return dataset;
}


    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            GrapheForm chart = new GrapheForm();
            chart.setVisible(true);
        });
    }

    // Méthode auto-générée pour l'initialisation de l'interface (peut rester inchangée)
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
